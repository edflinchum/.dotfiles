### Sway config
# Read `man 5 sway` for a complete reference.

#
# Variables
#

# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi -IS drun
set $altmenu dmenu_path | dmenu | xargs swaymsg exec --
# Workspace default applications
set $app1 alacritty
set $app2 google-chrome-stable
set $app3 code
set $app4 nautilus
set $app5 .
set $app6 .
set $app7 .
set $app8 lollypop
set $app9 .



#
# Input/Output Devices:
#

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
#

input * xkb_numlock enabled

### Output configuration
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
#

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill



#
# Workspaces:
#

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8
set $ws9 9

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace $ws9

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1, workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2, workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3, workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4, workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5, workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6, workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7, workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8, workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9, workspace $ws9

# navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+x workspace back_and_forth
bindsym $mod+Shift+x move container to workspace back_and_forth, workspace back_and_forth



#
# Windows:
#

### Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

### Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith, exec notify-send 'tile horizontally' -t 500
bindsym $mod+v splitv, exec notify-send 'tile vertically' -t 500
bindsym $mod+z split toggle

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen toggle

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

# Move focus with mouse
focus_follows_mouse yes

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>

### Borders and font:
#
# Configure border style <normal|1pixel|pixel xx|none|pixel>
default_border pixel 4
default_floating_border normal

# Hide borders
hide_edge_borders smart

# change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 4
bindsym $mod+n border normal

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font xft:URWGothic-Book 11

### Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show



#
# Applications:
#

### Open specific applications in floating mode
# for_window [app_id="pamac-manager"] floating enable
for_window [app_id="blueman-manager"] floating enable
for_window [app_id="nm-connection-editor"] floating enable
for_window [app_id="firefox" title="Library"] floating enable
for_window [app_id="thunderbird" title=".*Reminder"] floating enable
for_window [app_id="guake"] move window to scratchpad, scratchpad show, sticky enable
for_window [app_id="pavucontrol"] floating enable
for_window [app_id="calculator"] floating enable
for_window [instance="lxappearance"] floating enable
for_window [title="File Operation Progress"] floating enable
for_window [app_id="polkit-gnome-authentication-agent-1"] floating enable, border none, sticky enable

### Open applications on specific workspaces
assign [window_role="^browser$"] $ws2
assign [instance="code-oss"] $ws3
assign [app_id="org.gnome.Nautilus"] $ws4
assign [app_id="lollypop"] $ws8

### Change window settings
# for_window [window_role="browser"] layout tabbed



#
# Key bindings
#

# Start a terminal
bindsym $mod+Return exec $term
bindsym $mod+KP_Enter exec $term
bindsym F12 exec guake-toggle

# Kill focused window
bindsym $mod+Shift+q kill
bindsym $mod+q kill

# Start your launcher
bindsym $mod+d exec $menu
bindsym $mod+Shift+d exec $altmenu

# Media controls:
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set +5%
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Launch a default application on its designated workspace:
bindsym $mod+KP_1 workspace --no-auto-back-and-forth $ws1, exec $app1
bindsym $mod+KP_2 workspace --no-auto-back-and-forth $ws2, exec $app2
bindsym $mod+KP_3 workspace --no-auto-back-and-forth $ws3, exec $app3
bindsym $mod+KP_4 workspace --no-auto-back-and-forth $ws4, exec $app4
bindsym $mod+KP_5 workspace --no-auto-back-and-forth $ws5, exec $app5
bindsym $mod+KP_6 workspace --no-auto-back-and-forth $ws6, exec $app6
bindsym $mod+KP_7 workspace --no-auto-back-and-forth $ws7, exec $app7
bindsym $mod+KP_8 workspace --no-auto-back-and-forth $ws8, exec $app8
bindsym $mod+KP_9 workspace --no-auto-back-and-forth $ws9, exec $app9



#
# Screenshots:
#

set $mode_screenshot   (E)verything, (W)indow, (S)creen
mode "$mode_screenshot" {
    # screen = all outputs
    bindsym e exec grimshot --notify copy screen
    bindsym Shift+e exec grimshot --notify save screen

    bindsym w exec grimshot --notify copy window
    bindsym Shift+w exec grimshot --notify save window

    # output = currently active output
    bindsym s exec grimshot --notify copy output
    bindsym Shift+s exec grimshot --notify save output

    # Return to default mode.
    bindsym Escape mode "default"
    bindsym Return mode "default"
}
bindsym $mod+Shift+s mode "$mode_screenshot"



#
# Resizing and gaps:
#

# Set inner/outer gaps
gaps inner 15px
gaps outer 10px

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders no_gaps

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps.
# Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace).
# If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps  Gaps: (o)uter, (i)nner
set $mode_gaps_outer  Outer Gaps: +|-|0 (local), Shift +|-|0 (global)
set $mode_gaps_inner  Inner Gaps: +|-|0 (local), Shift +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus              gaps inner current plus  5px
        bindsym minus             gaps inner current minus 5px
        bindsym 0                 gaps inner current set   0px
        bindsym KP_Add            gaps inner current plus  5px
        bindsym KP_Subtract       gaps inner current minus 5px
        bindsym KP_0              gaps inner current set   0px

        bindsym Shift+plus        gaps inner all     plus  5px
        bindsym Shift+minus       gaps inner all     minus 5px
        bindsym Shift+0           gaps inner all     set   0px
        bindsym Shift+KP_Add      gaps inner current plus  5px
        bindsym Shift+KP_Subtract gaps inner current minus 5px
        bindsym Shift+KP_0        gaps inner current set   0px

        bindsym Return mode "default"
        bindsym Escape mode "$mode_gaps"
}
mode "$mode_gaps_outer" {
        bindsym plus              gaps outer current plus  5px
        bindsym minus             gaps outer current minus 5px
        bindsym 0                 gaps outer current set   0px
        bindsym KP_Add            gaps outer current plus  5px
        bindsym KP_Subtract       gaps outer current minus 5px
        bindsym KP_0              gaps outer current set   0px

        bindsym Shift+plus        gaps outer all     plus  5px
        bindsym Shift+minus       gaps outer all     minus 5px
        bindsym Shift+0           gaps outer all     set   0px
        bindsym Shift+KP_Add      gaps outer current plus  5px
        bindsym Shift+KP_Subtract gaps outer current minus 5px
        bindsym Shift+KP_0        gaps outer current set   0px

        bindsym Return mode "default"
        bindsym Escape mode "$mode_gaps"
}

### Resizing containers:
#
set $mode_resize  Resize (h/j/k/l), Increase Gaps (+), Decrease Gaps (-)
mode "$mode_resize" {
    # left  will shrink the containers width
    # right will grow   the containers width
    # up    will shrink the containers height
    # down  will grow   the containers height
    bindsym $left        resize shrink width  10px
    bindsym $down        resize grow   height 10px
    bindsym $up          resize shrink height 10px
    bindsym $right       resize grow   width  10px
    bindsym Shift+$left  resize shrink width  20px
    bindsym Shift+$down  resize grow   height 20px
    bindsym Shift+$up    resize shrink height 20px
    bindsym Shift+$right resize grow   width  20px

    # Ditto, with arrow keys
    bindsym Left         resize shrink width  10px
    bindsym Down         resize grow   height 10px
    bindsym Up           resize shrink height 10px
    bindsym Right        resize grow   width  10px
    bindsym Shift+Left   resize shrink width  20px
    bindsym Shift+Down   resize grow   height 20px
    bindsym Shift+Up     resize shrink height 20px
    bindsym Shift+Right  resize grow   width  20px

    # Resize window gaps +/-
    bindsym plus         gaps inner current plus  5px
    bindsym minus        gaps inner current minus 5px
    bindsym KP_Add       gaps inner current plus  5px
    bindsym KP_Subtract  gaps inner current minus 5px

    # Return to default mode.
    bindsym Escape mode "default"
    bindsym Return mode "default"
}
bindsym $mod+r mode "$mode_resize"



#
# Session:
#

# Reload the configuration file
bindsym $mod+Shift+c reload

# Not working with Sway
# Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

### Idle configuration
exec swayidle -w \
         timeout  600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         timeout 1800 'swaylock -f -c 000000' \
         before-sleep 'swaylock -f -c 000000'

### Lock screen
bindsym $mod+0 exec swaylock -f -c 000000

# Replaced exit screen with swaynagmode below
# Exit sway (logs you out of your Wayland session)
# bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

### Swaynagmode for keyboard control of swaynag
# nag
set {
  $nag         exec swaynagmode
  $nag_exit    $nag --exit
  $nag_confirm $nag --confirm
  $nag_select  $nag --select
}
mode "nag" {
  bindsym {
    Ctrl+d    mode "default"
    Ctrl+c    $nag_exit
    q         $nag_exit
    Escape    $nag_exit
    Return    $nag_confirm
    Tab       $nag_select prev
    Shift+Tab $nag_select next
    Left      $nag_select next
    Right     $nag_select prev
    Up        $nag_select next
    Down      $nag_select prev
  }
}
bindsym {
  $mod+Shift+e $nag -t "warning" -m "You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session." -b "Exit" "swaymsg exit" -b "Reload" "swaymsg reload"
}
# -R is recommended for swaynag_command so that, upon a syntax error in your sway config, the
# 'Reload Sway' option will be initially selected instead of the 'Exit Sway' option
swaynag_command $nag -R

### Set shut down, restart and locking features:
#
#set $mode_system (l)ock, (e)xit, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
set $mode_system System menu: (l)ock, (e)xit, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id swaylock --color "#000000", mode "default"
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym e exec --no-startup-id swaymsg exit, mode "default"
    bindsym h exec --no-startup-id systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Escape mode "$mode_system"



#
# Theme:
#

# #Option1
# set $gnome-schema org.gnome.desktop.interface
# exec_always {
#     gsettings set $gnome-schema gtk-theme 'Your theme'
#     gsettings set $gnome-schema icon-theme 'Your icon theme'
#     gsettings set $gnome-schema cursor-theme 'Your cursor Theme'
# }
# #Option2
# exec_always ~/.config/sway/import-gsettings.sh \
#     gtk-theme:gtk-theme-name \
#     icon-theme:gtk-icon-theme-name \
#     cursor-theme:gtk-cursor-theme-name \
#     font-name:gtk-font-name



#
# Status Bar:
#

# Read `man 5 sway-bar` for more information about this section.
bar {
#
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#
    swaybar_command waybar
}
# hide/unhide status bar
# bindsym $mod+m bar mode toggle
bindsym $mod+m exec killall -SIGUSR1 waybar


#
# Autostart
#

# autostart background applications
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec dex -ae sway
# exec autotiling
exec flashfocus
exec_always sleep 1s && killall nm-applet && nm-applet --indicator &



#
# Include other configs
#

include /etc/sway/config.d/*
#include ~/.config/sway/config.d/*
#include ~/.config/sway/config-$(hostname).d/*
