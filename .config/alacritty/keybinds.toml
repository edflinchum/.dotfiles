### Alacritty keyboard bindings

# Open new window
[[keyboard.bindings]]
key = "N"
mods = "Control|Shift"
action = "SpawnNewInstance"
# action = "CreateNewWindow"


# Close current window
[[keyboard.bindings]]
key = "W"
mods = "Control|Shift"
action = "Quit"


# Disable transparency for current window
[[keyboard.bindings]]
key = "T"
mods = "Control|Shift"
[keyboard.bindings.command]
  program="alacritty"
  args = [
    "msg",
    "config",
    "window.opacity=1.0"
  ]


# Reset config
[[keyboard.bindings]]
key = "R"
mods = "Control|Shift"
[keyboard.bindings.command]
  program = "alacritty"
  args = [
    "msg",
    "config",
    "--reset"
  ]


# Increase default background opacity
[[keyboard.bindings]]
key = "Up"
mods = "Control|Shift"
[keyboard.bindings.command]
  program = "sh"
  args = [
    "-c",
    "perl -i -pe 's/(opacity = )([0-1]?.?[0-9]+)/if ($2<1) {$1.($2+0.025)} else {$1.$2}/e' ~/.config/alacritty/style.toml"
  ]


# Decrease default background opacity
[[keyboard.bindings]]
key = "Down"
mods = "Control|Shift"
[keyboard.bindings.command]
program = "sh"
  args = [
    "-c",
    "perl -i -pe 's/(opacity = )([0-1]?.?[0-9]+)/if ($2>0) {$1.($2-0.025)} else {$1.$2}/e' ~/.config/alacritty/style.toml"
  ]


# Set background opacity for current window
# [[keyboard.bindings]]
# key = "Y"
# mods = "Control|Shift"
# chars = """
#   seq -f %g 1 -0.025 0 | fzf --preview 'alacritty msg config window.opacity={}' &>/dev/null
# """

# Clear screen first
# [[keyboard.bindings]]
# key = "Y"
# mods = "Control|Shift"
# chars = "\u000c"

# Set background opacity for current window
[[keyboard.bindings]]
key = "Y"
mods = "Control|Shift"
[keyboard.bindings.command]
  program = "sh"
  args = [
    "-c",
    """
      alacritty msg create-window --command sh -c '
        printf "ALACRITTY OPACITY SELECTOR\n\n\nSelect opacity...\n"
        seq -f %g 1 -0.025 0 | fzf --preview "alacritty msg config window.opacity={} -w -1"
      '
    """
  ]


# Select Theme
[[keyboard.bindings]]
key = "~"
mods = "Control|Shift"
[keyboard.bindings.command]
  program = "sh"
  args = [
    "-c",
    """
      alacritty \
        --config-file ~/.config/alacritty/alacritty-theme-preview.toml \
        --working-directory ~/.config/alacritty \
        --command sh -c '
          load_themes () {
            if [ -d alacritty-theme ]; then
              echo Updating theme list...
              command git -C alacritty-theme pull
            else
              echo Installing themes...
              git clone https://github.com/alacritty/alacritty-theme
              echo
              echo Theme package has been loaded for the first time.
              echo Live theme reloading will not occur until a theme is selected and the terminal is restarted.
            fi
          }
          select_theme () {
            echo Select a new theme...
            ls alacritty-theme/themes |
            fzf \
              --cycle \
              --layout=reverse \
              --border \
              --height=60% \
              --preview-window=wrap,60% \
              --preview "
                ln -sf alacritty-theme/themes/{} theme-preview.toml
                echo ALACRITTY THEME: {}
                echo
                alacritty-theme/print_colors.sh
              " |
            xargs -I {} ln -sf alacritty-theme/themes/{} theme.toml
          }
          echo ALACRITTY THEME SELECTOR
          echo
          load_themes
          echo
          select_theme
        '
    """
  ]
